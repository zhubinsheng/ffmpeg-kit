name: android build scripts

on:
  push:
    branches:
      - main
      - pass
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'
  pull_request:
    branches:
      - development
      - main
    paths:
      - '.github/workflows/android-build-scripts.yml'
      - 'android/**'
      - '!android/README.md'
      - 'scripts/**'
      - 'tools/**'
      - 'android.sh'

jobs:
  build-lts-on-linux:
    name: android lts on linux
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        ndk-version: [ 'r21-linux-x86_64']
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - name: set up adopt jdk 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: set up android ndk
        run: |
          curl -s "https://dl.google.com/android/repository/android-ndk-${{ matrix.ndk-version }}.zip" -o ndk.zip
          unzip -q -o ndk.zip -d .ndk
          echo "ANDROID_NDK_ROOT=$PWD/.ndk/$(ls .ndk)" >> $GITHUB_ENV
      - name: run the build script
        run: ./android.sh  -d  --disable-arm-v7a --disable-arm-v7a-neon --disable-x86 --disable-x86-64  --enable-gpl --enable-nonfree --enable-android-media-codec --enable-android-zlib  --no-ffmpeg-kit-protocols --enable-custom-library-1-name=fdk-aac --enable-custom-library-1-repo=https://github.com/mstorsjo/fdk-aac --enable-custom-library-1-repo-tag=v2.0.0 --enable-custom-library-1-package-config-file-name=fdk-aac --enable-custom-library-1-ffmpeg-enable-flag=libfdk-aac --enable-custom-library-1-license-file=COPYING
 
      - name: print build logs
        if: ${{ always() }}
        run: cat build.log
      - name: print ffbuild logs
        if: ${{ failure() }}
        run: '[[ -f ./src/ffmpeg/ffbuild/config.log ]] && tail -50 ./src/ffmpeg/ffbuild/config.log'
        # 这里引用了别人写好的发布库，具体参数信息可以查阅上面的链接
      - name: Deploy
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: prebuilt/
